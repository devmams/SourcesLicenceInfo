import java.awt.Color;
import java.util.ArrayList;

public class Empire {

	private Color couleur;
	private ArrayList<Planetes> planetes;
	private Planetes p;
	private ArrayList<Vaisseaux> vaisseaux;
	private Vaisseaux v1;
	private Vaisseaux v2;
	private static ArrayList<Entite> listeEntites = new ArrayList<Entite>();
	
	public Empire(Color col){
		couleur = col;
		planetes = new ArrayList<Planetes>();
		vaisseaux = new ArrayList<Vaisseaux>();
		p = new Planetes(couleur);
		v1 = new Vaisseaux(p,couleur);
		v2 = new Vaisseaux(p,couleur);
		ajouterPlanete(p);
		vaisseaux.add(v1);
		vaisseaux.add(v2);	

	}
	
	
	public void ajouterPlanete(Planetes p){
		planetes.add(p);
		nouveauVaisseauxEnDeConstruction(p);
	}

	private void nouveauVaisseauxEnDeConstruction(Planetes p){
		p.vaisseauxEnConstruction(p);
	}
	
	public Color getEmpirColor(){
		return couleur;
	}
	
	public ArrayList<Planetes> getPlanetes(){
		return planetes;
	}
	
	public void autoDestruction(){
		for(int i=0 ;i<vaisseaux.size() ;i++){
			if(!vaisseaux.get(i).verifCarburant() /*|| vaisseaux.get(i).getIntegrite() == 0*/){
				vaisseaux.get(i).viderCase(vaisseaux.get(i).getNumeroEntite());
				vaisseaux.remove(i);
			}
		}
	}
	
	public void constructionVaisseaux(int t){
		for(int i=0 ; i<planetes.size() ;i++){
			if(planetes.get(i).constructionTerminee(t)){
				vaisseaux.add(planetes.get(i).vaisseauxConstruit());
				nouveauVaisseauxEnDeConstruction(planetes.get(i));
			}
		}
	}
	
	public Entite entitePresente(int num){
		return listeEntites.get(num);
	}
	
	public ArrayList<Vaisseaux> getVaisseaux(){
		return vaisseaux;
	}
	
	public void interaction(){
		for(int v=0 ;v<vaisseaux.size() ;v++){
			int cible = vaisseaux.get(v).caseCible();
			if(vaisseaux.get(v).occupee(vaisseaux.get(v).retrouverAbs(cible) , vaisseaux.get(v).retrouverOrd(cible))){
				
				
			}
			}
		}
	}
}
