import java.awt.Color;
import java.util.ArrayList;
import java.util.Random;

public class Planetes extends Entite {

	private int taillePlanete;
	private int population;
	private int tauxNatalite;
	private int integrite;
	private Vaisseaux nvVaisseaux ;
	
	public Planetes(Color c){
		super(c);
		Random rand = new Random();
		taillePlanete = Math.abs(rand.nextInt())%(Constantes.PlaneteTailleMax-Constantes.PlaneteTailleMin+1) + Constantes.PlaneteTailleMin;//taille
		population = taillePlanete/2;
		tauxNatalite = Math.abs(rand.nextInt())%(Constantes.TauxNataliteMax-Constantes.TauxNataliteMin+1) + Constantes.TauxNataliteMin;//tauxNatalite
	}
	
	public int getTaillePlante(){
		return taillePlanete;
	}
	
	public boolean lancementVaisseaux(int t){
		boolean bool = false;
		//nvVaisseaux.nouvelleIntegrite(t,population);
		if(nvVaisseaux.getIntegrite() == nvVaisseaux.getResistance())
			bool = true;
		return bool;
	}
	
	public void vaisseauxEnConstruction(Planetes p){
		nvVaisseaux = new Vaisseaux(p,p.getColorEntite());
		nvVaisseaux.setIntegrite(0);
	}
	
	public Vaisseaux vaisseauxConstruit(){
		return nvVaisseaux;
	}
	
	
	public int getPopulaltion(){
		return population;
	}
	
	public int getTauxNatalite(){
		return tauxNatalite;
	}
	
	public void reproduction(){
		population = min(taillePlanete, population*(1+tauxNatalite));
	}
	
	public int min(int a ,int b){
		int tmp = a;
		if(a > b){
			tmp = b;
		}
		return tmp;
	}
		
		
}
