package mainpack;
import java.util.ArrayList;

public class Triangle extends Polygone {
	
	
	public Triangle(Point A,Point B,Point C) {
		points = new ArrayList<Point>();
		points.add(A);points.add(B);points.add(C);
	}
	
	public Triangle(ArrayList<Point> ensPoints) {
		super(ensPoints);
	}
	
	
	static boolean TestTriangleContientPoint(Triangle t,Point p)
	{
		if(t.posPointTriangle(p) == 0 || t.posPointTriangle(p) == 1)
		{
			return true;
		}else {
			return false;
		}
	}
	
	public int posPointTriangle(Point p){
		int res;
		Point prounded = new Point(Simulation.round(p.x, 2),Simulation.round(p.y,2));
		//p = prounded;
		Point A = points.get(0);
		Point B = points.get(1);
		Point C = points.get(2);
		Segment AB, BC, CA;
		AB = new Segment(A,B);
		BC = new Segment(B,C);
		CA = new Segment(C,A);
		if(AB.appartientSegment(p) || BC.appartientSegment(p) || CA.appartientSegment(p)){
			res = 0; //sur l'un des cotés du triangle
		}
		else{
			Droite dAB = new Droite(A,B);
			Droite dBC = new Droite(B,C);
			Droite dCA = new Droite(C,A);
			if((dAB.appartient(p)==dAB.appartient(C)) 
			&& (dBC.appartient(p)==dBC.appartient(A))
			&& (dCA.appartient(p)==dCA.appartient(B))){
				res = 1; //à l'intérieur du triangle
			}
			else{
				res = -1; //à l'extérieur du triangle
			}
		}
		return res;
	}
	
}
