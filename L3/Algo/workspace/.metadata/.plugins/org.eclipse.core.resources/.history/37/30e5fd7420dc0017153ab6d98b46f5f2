/**
 * Classe permettant de cr√©er un Carre
 * 
 * @author Nicolas VANNIER / Mamadou DIALLO
 */
package mainpack;
import java.util.ArrayList;

public class Carre extends Polygone {

	public Carre(Point A,Point B,Point C,Point D) {
		points = new ArrayList<Point>();
		points.add(A);
		points.add(B);
		points.add(C);
		points.add(D);
	}

	public Carre(ArrayList<Point> ensPoints) {
		super(ensPoints);
	}

	public boolean estInterieurCarre(Point p)
	{
		Point A = points.get(0);
		Point B = points.get(1);
		Point C = points.get(2);
		Point D = points.get(3);
		if( (p.x > A.x && p.x < D.x) && (p.y < B.y && p.y > A.y) )
		{
			return true;
		}else {
			return false;
		}
	}
	
	public boolean estInterieurOuBordCarre(Point p)
	{
		Point A = points.get(0);
		Point B = points.get(1);
		Point C = points.get(2);
		Point D = points.get(3);
		if( (p.x >= A.x && p.x <= D.x) && (p.y <= B.y && p.y >= A.y) )
		{
			return true;
		}else {
			return false;
		}
	}
	
	public boolean triangleDansCarre(Triangle t)
	{
		
		ArrayList<Segment> cotesCarre = this.cotesPoly();
		ArrayList<Segment> cotesTriangle = t.cotesPoly();
		int nbInter;
		Point pInter;
		for(Segment st:cotesTriangle)
		{
			nbInter = 0;
			for(Segment sc:cotesCarre)
			{
				if(st.intersecte(sc))
				{
					pInter = st.pointIntersection(sc);
					if(
					!t.estPointPoly(pInter)
					&&
					!sc.estPointSegment(pInter)
					)
					{
						return true;
					}else if(t.estPointPoly(pInter) && !this.estPointPoly(pInter))
					{
						nbInter++;
					}else if(t.estPointPoly(pInter) && this.estPointPoly(pInter) && nbInter==1)
					{
						nbInter++;
					}
					
					if(nbInter==2)
					{
						return true;
					}
				}
			}
		}
		
		for (Point p:t.getPoints())
		{
			if(this.estInterieurCarre(p))
			{
				return true;
			}
		}
		
		int i=0;
		for (Point p:this.getPoints())
		{
			if(t.posPointTriangle(p)==1)
			{
				return true;
			}
			else if(t.posPointTriangle(p)==0)
			{
				i++;
			}
		}
		if(i>1)
		{
			return true;
		}
		
		return false;
	}
}
